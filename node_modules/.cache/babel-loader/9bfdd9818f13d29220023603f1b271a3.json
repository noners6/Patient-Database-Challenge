{"ast":null,"code":"var _jsxFileName = \"/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/PatientTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { createStyles, makeStyles } from '@mui/styles';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { COLUMNS } from '../columns';\nimport { getData } from '../data';\nimport './patient-table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: 'flex',\n    minWidth: 'fit-content',\n    minHeight: 600,\n    height: 400\n  },\n  root: {\n    border: '1px solid',\n    color: '#001D3F',\n    WebkitFontSmoothing: 'auto'\n  }\n} // row background color\n));\nexport const PatientsTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const [data, setData] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    getData().then(data => {\n      setData(data);\n    });\n  }, []);\n  const navigate = useNavigate();\n  if (!data) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      className: classes.root,\n      rows: data,\n      columns: columns,\n      onCellClick: (row, event) => navigate(`/patients/${row.id}`),\n      components: {\n        Toolbar: GridToolbar\n      },\n      sx: {\n        boxShadow: 2,\n        border: 2,\n        borderColor: '#001D3F',\n        '& .MuiDataGrid-cell:hover': {\n          color: '#F45B66'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PatientsTable, \"xphOJNqLpTFlvIHFsakHxB+i7PA=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = PatientsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientsTable\");","map":{"version":3,"names":["createStyles","makeStyles","DataGrid","GridToolbar","React","useEffect","useMemo","useState","useNavigate","COLUMNS","getData","useStyles","theme","container","display","minWidth","minHeight","height","root","border","color","WebkitFontSmoothing","PatientsTable","columns","data","setData","classes","then","navigate","row","event","id","Toolbar","boxShadow","borderColor"],"sources":["/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/PatientTable.tsx"],"sourcesContent":["import { createStyles, makeStyles } from '@mui/styles';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { COLUMNS } from '../columns';\nimport { getData } from '../data';\nimport './patient-table.css';\n\nconst useStyles = makeStyles((theme: any) =>\n  createStyles(\n    {\n      container: {\n        display: 'flex',\n        minWidth: 'fit-content',\n        minHeight: 600,\n        height: 400,\n      },\n      root: {\n        border: '1px solid',\n        color: '#001D3F',\n        WebkitFontSmoothing: 'auto',\n      },\n    }\n    // row background color\n  )\n);\n\nexport const PatientsTable = () => {\n  const columns = useMemo(() => COLUMNS, []);\n  const [data, setData] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    getData().then((data: any) => {\n      setData(data);\n    });\n  }, []);\n\n  const navigate = useNavigate();\n\n  if (!data) return null;\n\n  return (\n    <div className={classes.container}>\n      <DataGrid\n        className={classes.root}\n        rows={data}\n        columns={columns}\n        onCellClick={(row: any, event: any) => navigate(`/patients/${row.id}`)}\n        components={{ Toolbar: GridToolbar }}\n        sx={{\n          boxShadow: 2,\n          border: 2,\n          borderColor: '#001D3F',\n          '& .MuiDataGrid-cell:hover': {\n            color: '#F45B66',\n          },\n        }}\n      />\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAO,qBAAP;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,IAC3BZ,YAAY,CACV;EACEa,SAAS,EAAE;IACTC,OAAO,EAAE,MADA;IAETC,QAAQ,EAAE,aAFD;IAGTC,SAAS,EAAE,GAHF;IAITC,MAAM,EAAE;EAJC,CADb;EAOEC,IAAI,EAAE;IACJC,MAAM,EAAE,WADJ;IAEJC,KAAK,EAAE,SAFH;IAGJC,mBAAmB,EAAE;EAHjB;AAPR,CADU,CAcV;AAdU,CADc,CAA5B;AAmBA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACjC,MAAMC,OAAO,GAAGjB,OAAO,CAAC,MAAMG,OAAP,EAAgB,EAAhB,CAAvB;EACA,MAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMmB,OAAO,GAAGf,SAAS,EAAzB;EAEAN,SAAS,CAAC,MAAM;IACdK,OAAO,GAAGiB,IAAV,CAAgBH,IAAD,IAAe;MAC5BC,OAAO,CAACD,IAAD,CAAP;IACD,CAFD;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMA,MAAMI,QAAQ,GAAGpB,WAAW,EAA5B;EAEA,IAAI,CAACgB,IAAL,EAAW,OAAO,IAAP;EAEX,oBACE;IAAK,SAAS,EAAEE,OAAO,CAACb,SAAxB;IAAA,uBACE,QAAC,QAAD;MACE,SAAS,EAAEa,OAAO,CAACR,IADrB;MAEE,IAAI,EAAEM,IAFR;MAGE,OAAO,EAAED,OAHX;MAIE,WAAW,EAAE,CAACM,GAAD,EAAWC,KAAX,KAA0BF,QAAQ,CAAE,aAAYC,GAAG,CAACE,EAAG,EAArB,CAJjD;MAKE,UAAU,EAAE;QAAEC,OAAO,EAAE7B;MAAX,CALd;MAME,EAAE,EAAE;QACF8B,SAAS,EAAE,CADT;QAEFd,MAAM,EAAE,CAFN;QAGFe,WAAW,EAAE,SAHX;QAIF,6BAA6B;UAC3Bd,KAAK,EAAE;QADoB;MAJ3B;IANN;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAlCM;;GAAME,a;UAGKX,S,EAQCH,W;;;KAXNc,a"},"metadata":{},"sourceType":"module"}