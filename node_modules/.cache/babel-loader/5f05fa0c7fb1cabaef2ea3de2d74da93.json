{"ast":null,"code":"var _jsxFileName = \"/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/PatientTable.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BasicTable = () => {\n  /*\n  const columns = useMemo(() => COLUMNS, []);\n  const data: any = useMemo(() => api, []);\n   console.log('columns', columns);\n  const tableInstance = useTable({\n    columns,\n    data,\n  });\n  */\n  //const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n  // tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["BasicTable"],"sources":["/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/PatientTable.tsx"],"sourcesContent":["export const BasicTable = () => {\n  /*\n  const columns = useMemo(() => COLUMNS, []);\n  const data: any = useMemo(() => api, []);\n\n  console.log('columns', columns);\n  const tableInstance = useTable({\n    columns,\n    data,\n  });\n  */\n\n  //const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n  // tableInstance;\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td></td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n"],"mappings":";;AAAA,OAAO,MAAMA,UAAU,GAAG,MAAM;EAC9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGE;EACA;EAEA,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA,uBACE;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAA,uBACE;QAAA,uBACE;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA7BM;KAAMA,U"},"metadata":{},"sourceType":"module"}