{"ast":null,"code":"var _jsxFileName = \"/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/PatientTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useSortBy, useTable } from 'react-table';\nimport { COLUMNS } from '../columns';\nimport { getData } from '../data';\nimport './patient-table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PatientsTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getData().then(data => {\n      setData(data);\n    });\n  }, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  }, useSortBy);\n  if (!data) return null;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PatientsTable, \"9FWhLicoa01hkuCeXKJ9i/CgAG0=\", false, function () {\n  return [useTable];\n});\n\n_c = PatientsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientsTable\");","map":{"version":3,"names":["useEffect","useMemo","useState","useSortBy","useTable","COLUMNS","getData","PatientsTable","columns","data","setData","then","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow"],"sources":["/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/PatientTable.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { useSortBy, useTable } from 'react-table';\nimport { COLUMNS } from '../columns';\nimport { getData } from '../data';\nimport './patient-table.css';\n\nexport const PatientsTable = () => {\n  const columns = useMemo(() => COLUMNS, []);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getData().then((data: any) => {\n      setData(data);\n    });\n  }, []);\n\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy\n  );\n\n  if (!data) return null;\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    tableInstance;\n\n  return <div></div>;\n};\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,aAApC;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAO,qBAAP;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACjC,MAAMC,OAAO,GAAGP,OAAO,CAAC,MAAMI,OAAP,EAAgB,EAAhB,CAAvB;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EAEAF,SAAS,CAAC,MAAM;IACdM,OAAO,GAAGK,IAAV,CAAgBF,IAAD,IAAe;MAC5BC,OAAO,CAACD,IAAD,CAAP;IACD,CAFD;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMA,MAAMG,aAAa,GAAGR,QAAQ,CAC5B;IACEI,OADF;IAEEC;EAFF,CAD4B,EAK5BN,SAL4B,CAA9B;EAQA,IAAI,CAACM,IAAL,EAAW,OAAO,IAAP;EAEX,MAAM;IAAEI,aAAF;IAAiBC,iBAAjB;IAAoCC,YAApC;IAAkDC,IAAlD;IAAwDC;EAAxD,IACJL,aADF;EAGA,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAxBM;;GAAML,a;UAUWH,Q;;;KAVXG,a"},"metadata":{},"sourceType":"module"}