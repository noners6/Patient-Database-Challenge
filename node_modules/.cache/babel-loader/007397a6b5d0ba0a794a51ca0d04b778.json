{"ast":null,"code":"var _jsxFileName = \"/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/ViewPatient.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Card, CardActions, CardContent, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getData } from '../data';\nimport { date, patientName, sex } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewPatient = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getData().then(data => {\n      setData(data);\n    });\n  }, []); // Get the patient ID from the URL\n\n  const url = window.location.href;\n  const splitUrl = url.split('/');\n  const id = parseInt(splitUrl[splitUrl.length - 1]);\n  const patient = data[id - 1];\n  const classes = useStyles();\n  if (data.length == 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 32\n  }, this); // Creates a card with the patient's information\n  // Calls helper functions to format the sex, name, and dates.\n\n  const card = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: '/patients',\n          children: \"Go back to Patient List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        children: \"Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.text,\n        children: patientName(patient.first_name, patient.last_name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        children: \"Sex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.text,\n        children: sex(patient.sex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.text,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `mailto:${patient.email}`,\n          children: patient.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        children: \"Created at:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.text,\n        children: date(patient.created_at)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        children: \"Updated at:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.text,\n        children: date(patient.updated_at)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) || /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 8\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      className: classes.cardContainer,\n      children: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewPatient, \"UssXVJQhvhkGIaAOuPiZQOSIPmo=\", true);\n\n_c = ViewPatient;\nexport default ViewPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPatient\");","map":{"version":3,"names":["Box","Button","Card","CardActions","CardContent","Typography","React","useEffect","useState","Link","getData","date","patientName","sex","ViewPatient","data","setData","then","url","window","location","href","splitUrl","split","id","parseInt","length","patient","classes","useStyles","card","header","text","first_name","last_name","email","created_at","updated_at","container","cardContainer"],"sources":["/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/ViewPatient.tsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n} from '@mui/material';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getData } from '../data';\nimport { date, patientName, sex } from '../util';\n\nconst ViewPatient = (): ReactElement => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getData().then((data: any) => {\n      setData(data);\n    });\n  }, []);\n\n  // Get the patient ID from the URL\n  const url = window.location.href;\n  const splitUrl: string[] = url.split('/');\n  const id: number = parseInt(splitUrl[splitUrl.length - 1]);\n  const patient: any = data[id - 1];\n  const classes = useStyles();\n\n  if (data.length == 0) return <div></div>;\n\n  // Creates a card with the patient's information\n  // Calls helper functions to format the sex, name, and dates.\n  const card = (\n    <React.Fragment>\n      <CardActions>\n        <Button size=\"small\">\n          <Link to={'/patients'}>Go back to Patient List</Link>\n        </Button>\n      </CardActions>\n\n      <CardContent>\n        <Typography className={classes.header}>Patient</Typography>\n        <Typography className={classes.text}>\n          {patientName(patient.first_name, patient.last_name)}\n        </Typography>\n\n        <Typography className={classes.header}>Sex</Typography>\n        <Typography className={classes.text}>{sex(patient.sex)}</Typography>\n\n        <Typography className={classes.header}>Email</Typography>\n        <Typography className={classes.text}>\n          <a href={`mailto:${patient.email}`}>{patient.email}</a>\n        </Typography>\n\n        <Typography className={classes.header}>Created at:</Typography>\n        <Typography className={classes.text}>\n          {date(patient.created_at)}\n        </Typography>\n\n        <Typography className={classes.header}>Updated at:</Typography>\n        <Typography className={classes.text}>\n          {date(patient.updated_at)}\n        </Typography>\n      </CardContent>\n    </React.Fragment>\n  ) || <div></div>;\n\n  return (\n    <Box className={classes.container}>\n      <Card variant=\"outlined\" className={classes.cardContainer}>\n        {card}\n      </Card>\n    </Box>\n  );\n};\n\nexport default ViewPatient;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}