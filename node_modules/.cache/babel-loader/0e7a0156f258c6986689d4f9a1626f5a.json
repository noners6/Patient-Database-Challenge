{"ast":null,"code":"var _jsxFileName = \"/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/ListPatients.tsx\",\n    _s = $RefreshSig$();\n\nimport { get } from 'lodash';\nimport React, { useEffect, useState } from 'react'; // Uncomment to use the mock api calls.\n\nimport * as api from '../mocks/api';\nimport { BasicTable } from './PatientTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListPatients = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getData().then(response => {\n      const dataEntry = get(response, 'data.entry');\n      setData(dataEntry);\n    });\n  });\n  console.log('gotData', data);\n  return /*#__PURE__*/_jsxDEV(BasicTable, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ListPatients, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = ListPatients;\nexport default ListPatients;\n\nasync function getData() {\n  try {\n    const data = await api.getPatients();\n    const json = await data;\n    return json;\n  } catch {\n    console.log('NULL');\n    return null;\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPatients\");","map":{"version":3,"names":["get","React","useEffect","useState","api","BasicTable","ListPatients","data","setData","getData","then","response","dataEntry","console","log","getPatients","json"],"sources":["/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/ListPatients.tsx"],"sourcesContent":["import { get } from 'lodash';\nimport React, { ReactElement, useEffect, useState } from 'react';\n// Uncomment to use the mock api calls.\nimport * as api from '../mocks/api';\nimport { BasicTable } from './PatientTable';\n\nconst ListPatients = (): ReactElement => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getData().then((response: any) => {\n      const dataEntry = get(response, 'data.entry');\n      setData(dataEntry);\n    });\n  });\n\n  console.log('gotData', data);\n\n  return <BasicTable data={data} />;\n};\n\nexport default ListPatients;\n\nasync function getData() {\n  try {\n    const data = await api.getPatients();\n    const json = await data;\n    return json;\n  } catch {\n    console.log('NULL');\n    return null;\n  }\n}\n"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,OAAOC,KAAP,IAA8BC,SAA9B,EAAyCC,QAAzC,QAAyD,OAAzD,C,CACA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;AACA,SAASC,UAAT,QAA2B,gBAA3B;;;AAEA,MAAMC,YAAY,GAAG,MAAoB;EAAA;;EACvC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EAEAD,SAAS,CAAC,MAAM;IACdO,OAAO,GAAGC,IAAV,CAAgBC,QAAD,IAAmB;MAChC,MAAMC,SAAS,GAAGZ,GAAG,CAACW,QAAD,EAAW,YAAX,CAArB;MACAH,OAAO,CAACI,SAAD,CAAP;IACD,CAHD;EAID,CALQ,CAAT;EAOAC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,IAAvB;EAEA,oBAAO,QAAC,UAAD;IAAY,IAAI,EAAEA;EAAlB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAbD;;GAAMD,Y;;KAAAA,Y;AAeN,eAAeA,YAAf;;AAEA,eAAeG,OAAf,GAAyB;EACvB,IAAI;IACF,MAAMF,IAAI,GAAG,MAAMH,GAAG,CAACW,WAAJ,EAAnB;IACA,MAAMC,IAAI,GAAG,MAAMT,IAAnB;IACA,OAAOS,IAAP;EACD,CAJD,CAIE,MAAM;IACNH,OAAO,CAACC,GAAR,CAAY,MAAZ;IACA,OAAO,IAAP;EACD;AACF"},"metadata":{},"sourceType":"module"}