{"ast":null,"code":"var _jsxFileName = \"/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/ViewPatient.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Card, CardActions, CardContent, Typography } from '@mui/material';\nimport { createStyles, makeStyles } from '@mui/styles';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getData } from '../data';\nimport { date, patientName, sex } from '../util'; // Uncomment to use the mock api calls.\n// import * as api from '../mocks/api';\n// TODO: get useEffect\n// Grab ID from URL\n// Make api call to get the same list /id\n// display it on the page with a different render method\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  header: {\n    fontSize: '14',\n    color: 'gray'\n  },\n  text: {\n    fontSize: '18',\n    color: '#001D3F'\n  },\n  container: {\n    border: '1px solid',\n    color: '#001D3F',\n    minWidth: 400,\n    maxWidth: 'fit-content',\n    margin: 'auto'\n  },\n  cardContainer: {\n    backgroundColor: '#BFD7EA'\n  }\n}));\n\nconst ViewPatient = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getData().then(data => {\n      setData(data);\n    });\n  }, []);\n  const url = window.location.href;\n  const splitUrl = url.split('/');\n  const id = parseInt(splitUrl[splitUrl.length - 1]);\n  const patient = data[id - 1];\n  const classes = useStyles();\n  if (data.length == 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 32\n  }, this);\n\n  const card = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: '/patients',\n          children: \"Go back to Patient List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        children: \"Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.text,\n        children: patientName(patient.first_name, patient.last_name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        children: \"Sex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.text,\n        children: sex(patient.sex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.text,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `mailto:${patient.email}`,\n          children: patient.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        children: \"Created at:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.text,\n        children: date(patient.created_at)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        children: \"Updated at:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.text,\n        children: date(patient.updated_at)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this) || /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 8\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      className: classes.cardContainer,\n      children: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewPatient, \"UssXVJQhvhkGIaAOuPiZQOSIPmo=\", false, function () {\n  return [useStyles];\n});\n\n_c = ViewPatient;\nexport default ViewPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPatient\");","map":{"version":3,"names":["Box","Button","Card","CardActions","CardContent","Typography","createStyles","makeStyles","React","useEffect","useState","Link","getData","date","patientName","sex","useStyles","theme","header","fontSize","color","text","container","border","minWidth","maxWidth","margin","cardContainer","backgroundColor","ViewPatient","data","setData","then","url","window","location","href","splitUrl","split","id","parseInt","length","patient","classes","card","first_name","last_name","email","created_at","updated_at"],"sources":["/Users/noners/Desktop/College/Coding Challenges/frontend-challenge-noam-gal/src/components/ViewPatient.tsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n} from '@mui/material';\nimport { createStyles, makeStyles } from '@mui/styles';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getData } from '../data';\nimport { date, patientName, sex } from '../util';\n\n// Uncomment to use the mock api calls.\n// import * as api from '../mocks/api';\n// TODO: get useEffect\n// Grab ID from URL\n// Make api call to get the same list /id\n// display it on the page with a different render method\n\nconst useStyles = makeStyles((theme: any) =>\n  createStyles({\n    header: {\n      fontSize: '14',\n      color: 'gray',\n    },\n    text: {\n      fontSize: '18',\n      color: '#001D3F',\n    },\n    container: {\n      border: '1px solid',\n      color: '#001D3F',\n      minWidth: 400,\n      maxWidth: 'fit-content',\n      margin: 'auto',\n    },\n    cardContainer: {\n      backgroundColor: '#BFD7EA',\n    },\n  })\n);\n\nconst ViewPatient = (): ReactElement => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getData().then((data: any) => {\n      setData(data);\n    });\n  }, []);\n\n  const url = window.location.href;\n  const splitUrl: string[] = url.split('/');\n  const id: number = parseInt(splitUrl[splitUrl.length - 1]);\n  const patient: any = data[id - 1];\n  const classes = useStyles();\n\n  if (data.length == 0) return <div></div>;\n\n  const card = (\n    <React.Fragment>\n      <CardActions>\n        <Button size=\"small\">\n          <Link to={'/patients'}>Go back to Patient List</Link>\n        </Button>\n      </CardActions>\n      <CardContent>\n        <Typography className={classes.header}>Patient</Typography>\n        <Typography className={classes.text}>\n          {patientName(patient.first_name, patient.last_name)}\n        </Typography>\n        <Typography className={classes.header}>Sex</Typography>\n        <Typography className={classes.text}>{sex(patient.sex)}</Typography>\n        <Typography className={classes.header}>Email</Typography>\n        <Typography className={classes.text}>\n          <a href={`mailto:${patient.email}`}>{patient.email}</a>\n        </Typography>\n        <Typography className={classes.header}>Created at:</Typography>\n        <Typography className={classes.text}>\n          {date(patient.created_at)}\n        </Typography>\n        <Typography className={classes.header}>Updated at:</Typography>\n        <Typography className={classes.text}>\n          {date(patient.updated_at)}\n        </Typography>\n      </CardContent>\n    </React.Fragment>\n  ) || <div></div>;\n\n  return (\n    <Box className={classes.container}>\n      <Card variant=\"outlined\" className={classes.cardContainer}>\n        {card}\n      </Card>\n    </Box>\n  );\n};\n\nexport default ViewPatient;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}